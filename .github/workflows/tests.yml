name: tests

# IMPORTANT: To remain secure for self-hosted runners
# We disallow `pull_request` here
on:
  push:

defaults:
  run:
    shell: bash

jobs:
  test-no-cert:
    name: TEST inputs ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: (hosted)
            os: macos-latest
    steps:
      - name: Import Certificates (macOS)
        uses: sudara/basic-macos-keychain-action@main
        id: import
        continue-on-error: true # assume fail, let us run the upcoming step
        with:
          dev-id-app-cert: ${{ secrets.NON_EXISTENT_CERT }}
          dev-id-app-password: ${{ secrets.NON_EXISTENT_CERT_PASSWORD }}

      - name: Check an error occurs when empty secret provided
        run: |
          if [ "${{ steps.import.outcome }}" == "success" ]; then
            echo "::error::Test step succeeded but should have failed"
            exit 1
          else
          echo "Test step failed as expected"
          fi

  test-keychain:
    name: TEST Keychain create ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: hosted
            os: macos-latest
    steps:
      - name: Import Certificates (macOS)
        uses: sudara/basic-macos-keychain-action@main
        id: import
        with:
          dev-id-app-cert: ${{ secrets.DEVELOPER_ID_APP_CERT }}
          dev-id-app-password: ${{ secrets.DEVELOPER_ID_APP_PASSWORD }}

      - name: Check keychain exists
        run: |
          if [ ! -f "${{ steps.import.outputs.keychain-path }}" ]; then
            echo "::error::Keychain not created"
            exit 1
          else
            echo "Keychain created"
          fi

  test-sign:
    name: TEST Sign ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: hosted
            os: macos-latest
    steps:
      - name: Import Certificates (macOS)
        uses: sudara/basic-macos-keychain-action@main
        id: import
        with:
          dev-id-app-cert: ${{ secrets.DEVELOPER_ID_APP_CERT }}
          dev-id-app-password: ${{ secrets.DEVELOPER_ID_APP_PASSWORD }}

      - name: Sign a file
        run: |
          echo "Hello, world" > hello.txt
          codesign --sign "${{ steps.import.outputs.keychain-path }}" hello.txt
          echo "File signed"

      - name: Verify code signing
        run: |
          codesign --verify -vv hello.txt
          if [ $? -ne 0 ]; then
            echo "Code signing verification failed"
            exit 1
          fi
